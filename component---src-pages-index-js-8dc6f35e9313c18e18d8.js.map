{"version":3,"sources":["webpack:///./src/components/timeline.js","webpack:///./src/components/graph.js","webpack:///./src/components/header.js","webpack:///./src/components/about.js","webpack:///./src/components/recentblogs.js","webpack:///./src/components/intro.js","webpack:///./src/components/projectcard.js","webpack:///./src/components/projects.js","webpack:///./src/components/contributions.js","webpack:///./src/components/supporting.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/helpers/link.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/nav.js","webpack:///./src/components/footer.js","webpack:///./src/components/layout.js","webpack:///./src/components/careers.js"],"names":["timeline","props","data","_361609340","timelineData","arraySort","timelineToml","events","timelineEntries","heights","today","moment","_iterator","entries","_isArray","Array","isArray","_i","Symbol","iterator","_ref","length","next","done","value","_ref2","index","event","date","between","diff","margin","Math","ceil","asDays","height","shift","push","react_default","a","createElement","className","classNames","styles","key","style","marginLeft","name","helpers_link","to","project_url","description","event_url","humanize","graph","contributions","_718903363","allContributionsCsv","edges","grid","_loop","contribution","node","x","size","y","repeat","floor","cnt","_","times","i","width","fill","id","header","about","recentblogs","blogEntries","_2194472120","blogsToml","blogs","slice","blog","url","title","intro","projectcard","project","linkEntries","links","_ref3","link","icon","aria-hidden","src","filename","alt","iconXl","projects","projectEntries","_3434359880","projectsToml","components_contributions","contributingEntries","_2761898906","contributingToml","supporting","orgEntries","_3013927335","supportingToml","organizations","org","orgLink","orgImage","__webpack_exports__","layout","careers","React","createContext","PropTypes","object","string","isRequired","func","Link","children","activeClassName","partiallyActive","other","objectWithoutPropertiesLoose_default","test","gatsby_link_default","Object","assign","gatsby_plugin_google_analytics","href","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","json","propTypes","shape","nav","githubEntries","_4200099479","githubToml","data-sticky","logo","type","data-toggle","data-target","aria-expanded","aria-label","viewBox","xmlns","d","aria-haspopup","aria-labelledby","footer","Date","getFullYear","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_helpers_link__WEBPACK_IMPORTED_MODULE_1__"],"mappings":"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","file":"component---src-pages-index-js-8dc6f35e9313c18e18d8.js","sourcesContent":["import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport * as moment from \"moment\"\nimport arraySort from \"array-sort\"\nimport classNames from \"classnames\"\nimport styles from \"../styles/timeline.module.css\"\n\nimport Link from \"../components/helpers/link\"\n\n\nexport default ( props ) => {\n  const data = useStaticQuery(\n    graphql`\n      query {\n        timelineToml {\n          events {\n            name\n            description\n            date\n            project_url\n            event_url\n          }\n        }\n      }\n    `\n  )\n  const timelineData = arraySort(data.timelineToml.events, 'date')\n  const timelineEntries = []                 // Array of computed JSX elements\n  const spacer = 14                          // Spacer is totalSize from ./src/components/graph.js\n  const heights = [180, 240, 120, 240, 300]  // List of heights to cycle through to avoid visual collision\n  const today = new moment()                 // Spacing starts at the begining of the timeline\n\n  for (const [index, event] of timelineData.entries()) {\n    const date  = moment(event.date, \"YYYY-MM-DD\")\n    const between = moment.duration(today.diff(date))\n\n    // Calculate spacing from today to the current event\n    const spacerCount = Math.ceil(moment.duration(today.diff(date)).asDays())\n    const margin = spacerCount * spacer\n\n    const height = heights.shift() // Grab the next height off the list\n\n    timelineEntries.push(\n      <div className={classNames(styles.event, \"border-left border-dark pl-1\")} key={\"event-\"+index} style={{ marginLeft: margin, height: height }}>\n        <h5 className={classNames(styles.name, \"p-0 m-0\")}>\n          <Link to={ event.project_url }>\n            { event.name }\n          </Link>\n        </h5>\n        <p className={classNames(styles.description, \"p-0 m-0\")}>\n          <Link to={ event.event_url }>\n            { event.description }\n          </Link>\n        </p>\n        <p className={classNames(styles.date, \"p-0 m-0\")}>{ between.humanize() } ago</p>\n      </div>\n    )\n    heights.push(height) // Put the used height on the end of the list\n  }\n\n  return (\n    <div className=\"d-flex align-items-end pb-1\">\n      { timelineEntries }\n    </div>\n  )\n}","import React from \"react\"\nimport _ from \"lodash\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\n\nexport default ( props ) => {\n  const data = useStaticQuery(\n    graphql`\n      query {\n        allContributionsCsv {\n          edges {\n            node {\n              cnt\n              dt\n            }\n          }\n        }\n      }\n    `\n  )\n  const { edges: contributions } = data.allContributionsCsv\n  const height = props.height  // Height of the header\n  const div = 20               // Divide the contribution count into blocks\n  const size = 12              // Size of the rectangle in px\n  const padding = 2            // Space between rectangle in px\n  const totalSize = size + padding\n\n  const grid = []\n\n  for (const [index, {node: contribution}] of contributions.entries()) {\n    const x = index*(totalSize)\n    let y = height-(totalSize)\n    const repeat = Math.floor(contribution.cnt/div)\n\n    _.times(repeat, (i) => {\n      y = y - totalSize\n      grid.push(<rect x={x} y={y} width={size} height={size} fill=\"#e0e0e0\" key={index+\"-\"+i} />)\n    })\n  }\n\n  return (\n    <svg width=\"100%\" height={ height } id='contribution-graph'>\n      <title>Open Source Contributions</title>\n      { grid }\n    </svg>\n  )\n}","import React from \"react\"\nimport classNames from \"classnames\"\nimport styles from \"../styles/header.module.css\"\n\nimport Timeline from \"../components/timeline\"\nimport Graph from \"../components/graph\"\n\n\nexport default () => (\n  <section className=\"o-hidden mb-3 p-0\">\n    <div className={classNames(styles.timeline, \"d-flex col-12 px-0 pb-2 o-hidden\")}>\n      <Timeline height=\"400\" />\n    </div>\n    <div className={classNames(styles.graph, \"d-flex col-12 px-0 pb-2 o-hidden\")}>\n      <Graph height=\"400\" />\n    </div>\n  </section>\n)","import React from \"react\"\n\n\nexport default () => (\n  <div className=\"col-md-5 d-flex mb-4\">\n    <div>\n      <h4 className=\"mb-3\">\n        <span className=\"border-bottom-3 border-primary\">About</span>\n      </h4>\n      <p className=\"lead pr-xl-4\">\n        Open source drives our industry forward, kick-starts new careers, and builds trust in the products we create. From using projects, making improvements, and sharing our most impactful innovations with the community–in open source, we want to leave it better than we found it.\n      </p>\n    </div>\n  </div>\n)","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Link from \"../components/helpers/link\"\n\n\nexport default () => {\n  const data = useStaticQuery(\n    graphql`\n      query {\n        blogsToml {\n          blogs {\n            title\n            url\n          }\n        }\n      }\n    `\n  )\n  const blogData = data.blogsToml.blogs.slice(0, 3)\n  const blogEntries = []\n\n  for (const [index,blog] of blogData.entries()) {\n    blogEntries.push(\n      <li key={\"blog-\"+index} className=\"mb-2\">\n        <Link to={blog.url} className=\"lead\">{blog.title}</Link>\n      </li>\n    )\n  }\n\n  return (\n  <div className=\"col-md-6 d-flex mb-4\">\n    <div className=\"recentblogs\">\n      <h4 className=\"mb-3\">\n        <Link to=\"https://engineering.salesforce.com/tagged/open-source\" className=\"hover-arrow border-bottom-3 border-primary\">Recent Blogs</Link>\n      </h4>\n      <ul className=\"list-unstyled\">\n        { blogEntries }\n      </ul>\n    </div>\n  </div>\n)}","import React from \"react\"\n\nimport About from \"../components/about\"\nimport RecentBlogs from \"../components/recentblogs\"\n\nexport default () => (\n  <section className=\"pt-3 pb-3\">\n    <div className=\"container\">\n      <div className=\"row justify-content-center\">\n        <div className=\"col-xl-11\">\n          <div className=\"row justify-content-between\">\n            <About />\n            <RecentBlogs />\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n)","import React from \"react\"\nimport classNames from \"classnames\"\nimport styles from \"../styles/projects.module.css\"\n\nimport Link from \"../components/helpers/link\"\n\n\nexport default ({ id, project }) => {\n  const linkEntries = []\n\n  for (const [index, link] of project.links.entries()) {\n    linkEntries.push(\n      <li key={ \"project-\"+id+\"-link-\"+index } className=\"list-inline-item mr-3\">\n        <Link to={ link.url } className={ classNames('pb-1', styles.link) }>\n          <span className={classNames('oi', 'oi-'+link.icon, styles.icon)} title={link.name} aria-hidden=\"true\"></span>\n          { link.name }\n        </Link>\n      </li>\n    )\n  }\n\n  return (\n  <div className=\"col-md-6 col-lg-4 d-flex\">\n    <div className=\"card card-body rounded-sm justify-content-between\" key={\"project-\"+id}>\n      <div className=\"mb-1 mb-md-2\">\n        <img src={\"/assets/img/projects/\"+project.filename} alt={project.name} className={classNames('icon', styles.iconXl)} />\n      </div>\n      <div>\n        <h4>{ project.name }</h4>\n        <p>\n          { project.description }\n        </p>\n        <ul className=\"list-inline\">\n          { linkEntries }\n        </ul>\n      </div>\n    </div>\n  </div>\n)}","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Link from \"../components/helpers/link\"\nimport ProjectCard from \"../components/projectcard\"\n\n\nexport default () => {\n  const data = useStaticQuery(\n    graphql`\n      query {\n        projectsToml {\n          projects {\n            name\n            category\n            description\n            filename\n            links {\n              name\n              url\n              icon\n            }\n          }\n        }\n      }\n    `\n  )\n  const projectData = data.projectsToml.projects\n  const projectEntries = []\n\n  for (const [index, project] of projectData.entries()) {\n    projectEntries.push(<ProjectCard key={index} project={project} />)\n  }\n\n  return (\n  <section className=\"bg-primary has-divider\">\n    <div className=\"container pt-6\">\n      <div className=\"row justify-content-center text-center pb-0\">\n        <div className=\"col-xl-8 col-lg-9\">\n          <h2 className=\"display-4 mx-xl-6\">Built at Salesforce.</h2>\n          <p className=\"lead\">\n          We release projects, both big and small, that solve problems in infrastructure, security, application development, and artificial intelligence.\n          </p>\n        </div>\n      </div>\n      <div className=\"row justify-content-center text-center pb-6\">\n        <div className=\"col text-center\">\n          <Link to=\"https://github.com/salesforce\" className=\"lead hover-arrow border-bottom-3 border-primary\">See all our projects</Link>\n        </div>\n      </div>\n      <div className=\"row justify-content-center\">\n        { projectEntries }\n      </div>\n    </div>\n  </section>\n)}","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Link from \"../components/helpers/link\"\n\nexport default () => {\n  const data = useStaticQuery(\n    graphql`\n      query {\n        contributingToml {\n          projects {\n            name\n            url\n            filename\n            description\n          }\n        }\n      }\n    `\n  )\n  const contributingData = data.contributingToml.projects\n  const contributingEntries = []\n\n  for (const [index, project] of contributingData.entries()) {\n    contributingEntries.push(\n      <div className=\"card card-sm card-body align-items-start rounded-sm my-2 mx-2\" key={\"contrib-\"+index}>\n        <div className=\"d-flex flex-row\">\n          <div className=\"col-2 p-0 text-center\">\n            <img src={\"/assets/img/contributing/\"+project.filename} alt={project.name} className=\"icon icon-lg mb-2\" />\n          </div>\n          <div className=\"col-10 p-0 ml-2\">\n            <h5 className=\"card-title mb-2\">\n              <Link to={ project.url } className=\"pb-1\">{ project.name }</Link>\n            </h5>\n            <p className=\"card-text\">{ project.description }</p>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n  <section className=\"bg-primary-light has-divider\">\n    <div className=\"container pt-6\">\n      <div className=\"row justify-content-center text-center pb-0 mb-3\">\n        <div className=\"col-xl-8 col-lg-9\">\n          <h2 className=\"display-4 mx-xl-6\">Contributions from Salesforce.</h2>\n          <p className=\"lead\">\n            We contribute to thousands of projects every year, from key technologies powering our innovation to community projects that make our world a better place.\n          </p>\n        </div>\n      </div>\n      <div className=\"row justify-content-center\">\n        <div className=\"card-columns\">\n          { contributingEntries }\n        </div>\n      </div>\n    </div>\n  </section>\n)}","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport classNames from \"classnames\"\nimport styles from \"../styles/supporting.module.css\"\n\nimport Link from \"../components/helpers/link\"\n\n\nexport default () => {\n  const data = useStaticQuery(\n    graphql`\n      query {\n        supportingToml {\n          organizations {\n            name\n            url\n            filename\n          }\n        }\n      }\n    `\n  )\n  const orgData = data.supportingToml.organizations\n  const orgEntries = []\n\n  for (const [index,org] of orgData.entries()) {\n    orgEntries.push(\n      <div key={\"image-\"+index} className=\"col-lg-2 col-md-4 col-6 d-flex mb-4 justify-content-center align-items-center\">\n        <div>\n          <Link to={org.url} className={classNames(styles.orgLink)}>\n            <img src={\"/assets/img/supporting/\"+org.filename} alt={org.name} className={classNames(styles.orgImage, 'px-1')} />\n          </Link>\n        </div>\n      </div>\n    )\n  }\n  return (\n  <section className=\"bg-light-grey has-divider\">\n    <div className=\"container pt-6\">\n      <div className=\"row justify-content-center text-center pb-4\">\n        <div className=\"col-xl-8 col-lg-9\">\n          <h2 className=\"display-4 mx-xl-10\">Supported by Salesforce.</h2>\n          <p className=\"lead\">\n          Providing financial support to projects creates a healthy and thriving community. We’re proud supporters and partners with the following organizations.\n          </p>\n        </div>\n      </div>\n      <div className=\"row justify-content-center\">\n        { orgEntries }\n      </div>\n    </div>\n  </section>\n)}","import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport Header from \"../components/header\"\nimport Intro from \"../components/intro\"\nimport Projects from \"../components/projects\"\nimport Contributions from \"../components/contributions\"\nimport Supporting from \"../components/supporting\"\nimport Careers from \"../components/careers\"\n\n\nexport default () => (\n  <Layout>\n    <Header />\n    <Intro />\n    <Projects />\n    <Contributions />\n    <Supporting />\n    <Careers />\n  </Layout>\n)","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport { Link as GatsbyLink } from \"gatsby\"\nimport { OutboundLink } from 'gatsby-plugin-google-analytics'\n\n// Since DOM elements <a> cannot receive activeClassName\n// and partiallyActive, destructure the prop here and\n// pass it only to GatsbyLink\nconst Link = ({ children, to, activeClassName, partiallyActive, ...other }) => {\n  // Tailor the following test to your environment.\n  // This example assumes that any internal link (intended for Gatsby)\n  // will start with exactly one slash, and that anything else is external.\n  const internal = /^\\/(?!\\/)/.test(to)\n\n  // Use Gatsby Link for internal links, and <a> for others\n  if (internal) {\n    return (\n      <GatsbyLink\n        to={to}\n        activeClassName={activeClassName}\n        partiallyActive={partiallyActive}\n        {...other}\n      >\n        {children}\n      </GatsbyLink>\n    )\n  }\n  return (\n    <OutboundLink href={to} {...other}>\n      {children}\n    </OutboundLink>\n  )\n}\n\nexport default Link","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport classNames from \"classnames\"\nimport styles from \"../styles/nav.module.css\"\n\nimport Link from \"./helpers/link\"\n\n\nexport default () => {\n  const data = useStaticQuery(\n    graphql`\n      query {\n        githubToml {\n          organizations {\n            name\n            url\n          }\n        }\n      }\n    `\n  )\n\n  const githubData = data.githubToml.organizations\n  const githubEntries = []\n\n  for (const [index, org] of githubData.entries()) {\n    githubEntries.push(\n      <Link to={ org.url } className=\"dropdown-item nav-link pl-2\" key={\"github-org-\"+index}>{ org.name }</Link>\n    )\n  }\n\n  return (\n  <div className=\"navbar-container\">\n    <nav className=\"navbar navbar-expand-lg justify-content-between navbar-light border-bottom-0\" data-sticky=\"top\">\n      <div className=\"container\">\n        <div className=\"col flex-fill px-0 d-flex justify-content-between\">\n          <Link to=\"/\" className={ classNames('navbar-brand', 'mr-0', 'fade-page') }>\n            <img src=\"/assets/img/salesforce-opensource.svg\" alt=\"Salesforce Open Source\" className={ styles.logo } />\n          </Link>\n          <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\".navbar-collapse\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <svg className=\"icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path d=\"M3 17C3 17.5523 3.44772 18 4 18H20C20.5523 18 21 17.5523 21 17V17C21 16.4477 20.5523 16 20 16H4C3.44772 16 3 16.4477 3 17V17ZM3 12C3 12.5523 3.44772 13 4 13H20C20.5523 13 21 12.5523 21 12V12C21 11.4477 20.5523 11 20 11H4C3.44772 11 3 11.4477 3 12V12ZM4 6C3.44772 6 3 6.44772 3 7V7C3 7.55228 3.44772 8 4 8H20C20.5523 8 21 7.55228 21 7V7C21 6.44772 20.5523 6 20 6H4Z\"\n              fill=\"#212529\" />\n            </svg>\n          </button>\n        </div>\n        <div className=\"collapse navbar-collapse col px-0 px-lg-2 flex-fill justify-content-end\">\n          <div className=\"py-2 py-lg-0\">\n            <ul className=\"navbar-nav\">\n              <li className=\"nav-item text-center\">\n                <Link to=\"https://engineering.salesforce.com/\" className=\"nav-link\">Blog</Link>\n              </li>\n              <li className=\"nav-item text-center\">\n                <Link to=\"https://twitter.com/salesforceeng\" className=\"nav-link\">Twitter</Link>\n              </li>\n              <li className=\"dropdown nav-item text-center\">\n                <Link to=\"#\" className=\"nav-link dropdown-toggle\" data-toggle=\"dropdown\" aria-expanded=\"false\" aria-haspopup=\"true\">GitHub</Link>\n                <div className=\"dropdown-menu m-0\" aria-labelledby=\"dropdownMenuLink\">\n                  { githubEntries }\n                </div>\n              </li>\n              <li className=\"nav-item text-center\">\n                <Link to=\"https://www.salesforce.com/company/careers/tech-product/\" className=\"nav-link\">Careers</Link>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </nav>\n  </div>\n)}","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Link from \"../components/helpers/link\"\n\n\nexport default () => {\n  const data = useStaticQuery(\n    graphql`\n      query {\n        githubToml {\n          organizations {\n            name\n            url\n          }\n        }\n      }\n    `\n  )\n\n  const githubData = data.githubToml.organizations\n  const githubEntries = []\n\n  for (const [index, org] of githubData.entries()) {\n    githubEntries.push(\n      <div className=\"nav-item col-12 col-md-6 p-0\" key={\"github-org-\"+index}>\n        <Link to={ org.url } className=\"nav-link p-0 mb-2\">{ org.name }</Link>\n      </div>\n    )\n  }\n\n  return (\n  <footer className=\"pb-5 bg-primary-3 text-light\">\n    <div className=\"container\">\n      <div className=\"row justify-content-center\">\n        <div className=\"col text-center\"> \n          <Link to=\"https://salesforce.com\">\n            <img src=\"/assets/img/cloud-salesforce.svg\" alt=\"Salesforce\" className=\"mb-4\" style={{height: 100}} />\n          </Link>\n        </div>\n      </div>\n      <div className=\"row mb-6 justify-content-center\">\n        <div className=\"col-md-10 col-lg-5 mb-3 text-lg-left text-md-center\">\n          <h5>About Salesforce</h5>\n          <p className=\"pr-xl-3 text-light\">\n            Salesforce is the leader in customer relationship management (CRM), bringing companies closer to their customers. Salesforce enables companies of every size and industry to take advantage of powerful technologies—cloud, mobile, social, internet of things, and artificial intelligence—to connect to their customers. <Link className=\"hover-arrow\" to=\"https://www.salesforce.com\">Go to salesforce.com</Link>\n          </p>\n        </div>\n        <div className=\"col-md-3 col-lg-2 mb-3\">\n          <h5>Open Source</h5>\n          <div className=\"d-flex flex-column\">\n            <div className=\"nav-item\">\n              <Link to=\"https://engineering.salesforce.com/\" className=\"nav-link p-0 mb-2\">Blog</Link>\n            </div>\n            <div className=\"nav-item\">\n              <Link to=\"https://twitter.com/salesforceeng\" className=\"nav-link p-0 mb-2\">Twitter</Link>\n            </div>\n            <div className=\"nav-item\">\n              <Link to=\"https://www.salesforce.com/company/careers/tech-product/\" className=\"nav-link p-0 mb-2\">Careers</Link>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-md-6 col-lg-4\">\n          <h5>On GitHub</h5>\n          <div className=\"d-flex flex-wrap\">\n            { githubEntries }\n          </div>\n        </div>\n      </div>\n      <div className=\"row justify-content-center text-center\">\n        <div className=\"col-xl-10\">\n          <ul className=\"list-inline mb-0\">\n            <li className=\"list-inline-item pr-2 mb-0 text-muted small\">\n              Copyright &copy; {(new Date().getFullYear())}, Salesforce, Inc\n            </li>\n            <li className=\"list-inline-item pr-2 mb-0 text-muted small\">\n              <Link to=\"https://www.salesforce.com/company/privacy/\">\n                Privacy Policy\n              </Link>\n            </li>\n            <li className=\"list-inline-item pr-2 mb-0 text-muted small\">\n              <Link to=\"https://www.salesforce.com/company/legal/sfdc-website-terms-of-service.jsp\">\n                Terms\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  </footer>\n)}","import React from \"react\"\n\nimport Nav from \"../components/nav\"\nimport Footer from \"../components/footer\"\n\n\nexport default ({ children }) => (\n  <div>\n    <Nav />\n    { children }\n    <Footer />\n  </div>\n)","import React from \"react\"\n\nimport Link from \"../components/helpers/link\"\n\n\nexport default () => (\n  <section className=\"bg-dark-grey has-divider\">\n    <div className=\"container pt-6\">\n      <div className=\"row justify-content-center pb-0\">\n        <div className=\"col-11 col-lg-9\">\n          <h2 className=\"display-4 text-muted\">Work with us.</h2>\n          <p className=\"lead text-light\">\n            Whether you want to work on open source full time like many members of team or if you just want to spend your <Link to=\"https://www.salesforce.org/volunteers/\">volunteer time off</Link> contributing to your favorite cause, at Salesforce we make open source a part of every job. <Link to=\"https://www.salesforce.com/company/careers/tech-product/\" className=\"hover-arrow\">See our open opportunities</Link>\n          </p>\n        </div>\n      </div>\n    </div>\n  </section>\n)"],"sourceRoot":""}